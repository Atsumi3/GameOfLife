package info.nukoneko.android.gameoflife.controller;import android.graphics.Rect;/** * Created by TEJNEK on 2016/03/21. */final class Cell {    private final CellController controller;    private final int x;    private final int y;    int livingCount = 0;    final Rect rect;    private boolean liveState = false;    Cell(CellController controller, Rect rect, int x, int y){        this(controller, rect, x, y, false);    }    private Cell(CellController controller, Rect rect, int x, int y, boolean defaultLive){        this.controller = controller;        this.rect = rect;        this.x = x;        this.y = y;        this.liveState = defaultLive;    }    boolean isLive(){        return liveState;    }    void setLive(boolean live){        this.liveState = live;    }    void getLiveCellCount() {        int liveCell = 0;        // left bottom        if (isLive(x - 1, y + 1)) liveCell++;        // left        if (isLive(x - 1, y)) liveCell++;        // left top        if (isLive(x - 1, y - 1)) liveCell++;        // top        if (isLive(x, y - 1)) liveCell++;        // right top        if (isLive(x + 1, y - 1)) liveCell++;        // right        if (isLive(x + 1, y)) liveCell++;        // right bottom        if (isLive(x + 1, y + 1)) liveCell++;        // bottom        if (isLive(x, y + 1)) liveCell++;        this.livingCount = liveCell;    }    private boolean isLive(int _x, int _y){        int targetX;        int targetY;        try{            final int rowMax = controller.cells.length -1;            if (_x == -1){                targetX = rowMax;            }else if (_x == controller.cells.length){                targetX = 0;            }else {                targetX = _x;            }            if (_y == -1){                targetY = rowMax;            }else if (_y == controller.cells.length){                targetY = 0;            }else {                targetY = _y;            }            return controller.cells[targetX][targetY].isLive();        }        catch (Exception e){            return false;        }    }}